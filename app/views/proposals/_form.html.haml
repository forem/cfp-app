%fieldset.margin-top
  = proposal.title_input(f)

  - opts_session_formats = event.session_formats.publicly_viewable.map {|st| [st.name, st.id]}
  - if !proposal.has_reviewer_activity?
    - if opts_session_formats.length > 1
      = f.association :session_format, collection: opts_session_formats, include_blank: 'None selected', required: true, input_html: {class: 'dropdown'},
        hint: "The format your proposal will follow.", popover_icon: { content: session_format_tooltip }
    - else
      = f.association :session_format, collection: opts_session_formats, include_blank: false, input_html: {readonly: "readonly"},
        hint: "The format your proposal will follow.", popover_icon: { content: "Only One Session Format for #{event.name}" }
  - else
    .form-group
      = f.label :session_format, 'Session format'
      %div #{proposal.session_format_name}

  - if event.multiple_tracks? && !proposal.has_reviewer_activity?
    - opts_tracks = event.tracks.sort_by_name.map {|t| [t.name, t.id]}
    = f.association :track, collection: opts_tracks, label: "Theme", include_blank: proposal.no_track_name_for_speakers, input_html: {class: 'dropdown', id: 'theme_select'},
      hint: "Optional: suggest a specific theme to be considered for.", popover_icon: { content: track_tooltip }

    = proposal.suggested_theme_input(f)
  - else
    .form-group
      = f.label :track, 'Theme'
      %div #{proposal.track_name_for_speakers}


  = proposal.abstract_input(f, abstract_tooltip)

  - if event.public_tags?
    .form-group
      %h3.control-label
        Tags
      = f.select :tags,
        options_for_select(event.proposal_tags, proposal.object.tags),
        {}, {class: 'multiselect proposal-tags', multiple: true }

%fieldset
  %legend.fieldset-legend For Review Committee
  %p
    This content will <strong> only</strong> be visible to the review committee.

  = f.input :details, input_html: { class: 'watched', rows: 5 }, label: 'Problem',
    hint: 'What problem is your talk solving?'#, popover_icon: { content: details_tooltip }

  = f.input :pitch, input_html: { class: 'watched', rows: 5 }, label: 'Fit',
    hint: 'Explain why you’re the best person to give this talk. This is less about expertise (which is not a requirement), but more about the relationship between the talk and the speaker, and finding a good fit. Feel free to include your passion, past experience, previous roles, etc.'#, popover_icon: { content: pitch_tooltip }

  /
    = f.input :talk_type, required: true,
      hint: "Please let us know which category you most see your proposed talk fitting in. Note: we don't favor one type of talk over others, but hope to have a good mix"

  = f.input :location_and_time_zone, required: true

  = f.input :equipment_requirements, input_html: { class: 'watched', rows: 5 }, required: true,
    hint: "Please let us know if you require any additional equipment (microphone, light, headphones) to ensure a clear and clean recording of your talk and your full participation in a live group panel over videoconference."

  = f.input :accessibility_requirements, input_html: { class: 'watched', rows: 5 }, required: true,
    hint: "Is anything that you’d like us to know about your accessibility needs or priorities?"

  = f.input :video_voice_recording_permission, required: true, label: 'Video and Voice Recording Permission',
    as: :boolean, boolean_style: :inline, 
    hint: "Each CodeLand talk will be submitted as a 15-minute pre-recorded video. We may also invite you to participate in a moderated live panel over video conference. Please check here to confirm that, if accepted, you are committing to sending us a pre-recorded 15-minute video of your talk and to possibly participating in a live panel over video conference."

- if event.custom_fields.any?
  - event.custom_fields.each do |custom_field|
    .form-group
      = f.label custom_field
      = text_field_tag "proposal[custom_fields][#{custom_field}]", proposal.custom_fields[custom_field], class: "form-control"

= render partial: 'speakers/fields', locals: { f: f, event: event }

.form-submit.clearfix.text-right
  - if proposal.persisted?
    = link_to "Cancel", event_proposal_path(event_slug: event.slug, uuid: proposal), {class: "btn btn-default btn-lg"}
  - else
    = link_to "Cancel", event_path(event.slug), {class: "btn btn-default btn-lg"}
  %button.btn.btn-primary.btn-lg{type: "submit"} Submit
